openapi: 3.0.3
info:
  title: Easyappz Payments API
  version: 1.1.0
  description: |
    API endpoints for Telegram Payments integration (native sendInvoice). All paths are prefixed with /api on the server.
servers:
  - url: http://localhost:3001
paths:
  /api/hello:
    get:
      summary: Hello endpoint
      responses:
        '200':
          description: Successful hello response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Hello from API!
  /api/status:
    get:
      summary: Status endpoint
      responses:
        '200':
          description: Service status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-01-01T12:00:00.000Z'
  /api/payments/product:
    get:
      summary: Get product info for the Arabic course
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/payments/prices-preview:
    get:
      summary: Build and validate Telegram prices payload
      description: Returns sanitized prices array to be sent to Telegram, its JSON string, validation status and any errors.
      responses:
        '200':
          description: Prices preview and validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricesPreviewResponse'
              examples:
                valid:
                  value:
                    currency: RUB
                    prices:
                      - label: "Арабский курс"
                        amount: 550000
                    rawJSON: '[{"label":"Арабский курс","amount":550000}]'
                    valid: true
                invalid:
                  value:
                    currency: RUB
                    prices:
                      - label: ""
                        amount: 0
                    rawJSON: '[{"label":"","amount":0}]'
                    valid: false
                    errors:
                      - 'prices[0].label must be a non-empty string'
  /api/payments/invoice:
    post:
      summary: Send invoice to a Telegram chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceRequest'
            examples:
              example1:
                value:
                  chatId: 123456789
      responses:
        '200':
          description: Invoice dispatch result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
              examples:
                success:
                  value:
                    ok: true
                    data:
                      message_id: 100
                      chat:
                        id: 123456789
                      provider_payment_charge_id: null
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
              examples:
                invalidChatId:
                  value:
                    ok: false
                    error: 'chatId is required and must be a number > 0'
        '500':
          description: Server or Telegram API error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
              examples:
                telegramPricesParseError:
                  value:
                    ok: false
                    error: 'ETELEGRAM: 400 Bad Request: can\'t parse prices JSON object'
                    details: '{"ok":false,"error_code":400,"description":"Bad Request: can\'t parse prices JSON object"}'
                telegramOtherError:
                  value:
                    ok: false
                    error: 'ETELEGRAM: 400 Bad Request: BAD_REQUEST'
                    details: 'raw telegram response body if available'
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: arabic_course_001
        title:
          type: string
          example: Арабский курс
        description:
          type: string
          example: Интенсивный онлайн‑курс арабского языка для начинающих.
        currency:
          type: string
          enum: [RUB]
          example: RUB
        price:
          type: number
          example: 5500
    PriceItem:
      type: object
      required: [label, amount]
      properties:
        label:
          type: string
          description: Display label of the price line
          example: "Арабский курс"
        amount:
          type: integer
          description: Amount in minor currency units (RUB -> kopecks)
          example: 550000
    PricesPreviewResponse:
      type: object
      properties:
        currency:
          type: string
          example: RUB
        prices:
          type: array
          items:
            $ref: '#/components/schemas/PriceItem'
        rawJSON:
          type: string
          description: JSON.stringify(prices) result used for debugging serialization issues
          example: '[{"label":"Арабский курс","amount":550000}]'
        valid:
          type: boolean
          example: true
        errors:
          type: array
          items:
            type: string
          nullable: true
    InvoiceRequest:
      type: object
      required: [chatId]
      properties:
        chatId:
          type: number
          description: Telegram chat ID to send invoice to
          example: 123456789
    InvoiceResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        data:
          description: Raw Telegram API response when ok=true
          nullable: true
        message:
          type: string
          nullable: true
        error:
          description: Error details when ok=false
          nullable: true
        details:
          description: Optional extended error details (e.g., Telegram response body) for debugging
          nullable: true
